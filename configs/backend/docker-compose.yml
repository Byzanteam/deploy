version: '3.5'
services:

  nitrogen:
    image: ${NITROGEN_REGISTRY}/byzanteam/nitrogen
    container_name: nitrogen
    ports:
      - ${NITROGEN_PORT}:8080
    depends_on:	
      - redis
      - minio	
      - rabbitmq	
      - postgres  
      - migrate
    volumes:
      - ./configs:/nitrogen/configs
    networks:
      - nitrogen

  migrate:
    image: ${NITROGEN_REGISTRY}/byzanteam/nitrogen
    container_name: migrate
    command: ["migrate"]
    depends_on:		
      - postgres     
    volumes:
      - ./configs:/nitrogen/configs
    networks:
      - nitrogen

  # uncomment if needed
  # geo: 
  #   image: ${NITROGEN_REGISTRY}/byzanteam/nitrogen
  #   container_name: geo
  #   command: ["geo","-c","geo","-i","1 hour"]
  #   volumes:
  #     - ./configs:/nitrogen/configs
  #   networks:
  #     - nitrogen    

  postgres:
    image: ${NITROGEN_REGISTRY}/byzanteam/nitrogen-postgres
    container_name: ${POSTGRES_NAME}
    ports:
    - ${POSTGRES_PORT}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ${POSTGRES_PATH}:/var/lib/postgresql/data:z
    networks:
      - nitrogen

  rabbitmq:
    image: ${RABITTMQ_IMAGE}
    container_name: ${RABITTMQ_NAME}
    ports:
      - ${RABITTMQ_PORT}:5672
    networks:
      - nitrogen

  redis:
    image: ${REDIS_IMAGE}
    container_name: ${REDIS_NAME}
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ${REDIS_PATH}:/data
    networks:
      - nitrogen      

  minio:
    image: ${MINIO_IMAGE}
    container_name: ${MINIO_NAME}
    ports:
      - ${MINIO_PORT}:9000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    entrypoint: "minio server --config-dir /config /data"
    networks:
      - nitrogen

networks:
  nitrogen:
    name: nitrogen
